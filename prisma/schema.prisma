generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model airline {
  code   String   @id @db.VarChar(2)
  name   String   @db.VarChar(255)
  flight flight[]
}

model flight {
  id                    Int       @id @default(autoincrement())
  uuid                  String    @unique(map: "flight_uuid") @db.Uuid
  tripId                Int       @map("trip_id")
  airlineCode           String?   @map("airline_code") @db.VarChar(2)
  flightNumber          Int?      @map("flight_number")
  departureAirportCode  String?   @map("departure_airport_code") @db.VarChar(3)
  departureTimestamp    DateTime? @map("departure_timestamp") @db.Timestamp(6)
  arrivalAirportCode    String?   @map("arrival_airport_code") @db.VarChar(3)
  arrivalTimestamp      DateTime? @map("arrival_timestamp") @db.Timestamp(6)
  departureTimezoneName String?   @default("Etc/UTC") @map("departure_timezone_name") @db.VarChar(64)
  arrivalTimezoneName   String?   @default("Etc/UTC") @map("arrival_timezone_name") @db.VarChar(64)
  confirmationNumber    String?   @map("confirmation_number") @db.VarChar(6)
  userId                String    @map("user_id") @db.Uuid
  airline               airline?  @relation(fields: [airlineCode], references: [code], onDelete: NoAction, map: "fk_flight_airline")
  arrivalAirport        airport?  @relation("airportToflight_arrival_airport_code", fields: [arrivalAirportCode], references: [code], onDelete: NoAction, map: "fk_flight_arrival_airport")
  departureAirport      airport?  @relation("airportToflight_departure_airport_code", fields: [departureAirportCode], references: [code], onDelete: NoAction, map: "fk_flight_departure_airport")
  trip                  trip      @relation(fields: [tripId], references: [id], onDelete: Cascade, map: "fk_flight_trip")
}

model trip {
  id     Int      @id @default(autoincrement())
  uuid   String   @unique(map: "trip_uuid") @db.Uuid
  name   String   @db.VarChar(255)
  userId String   @map("user_id") @db.Uuid
  flight flight[]
  stay   stay[]
}

model stay {
  id                 Int       @id @default(autoincrement())
  uuid               String    @unique(map: "stay_uuid") @db.Uuid
  tripId             Int       @map("trip_id")
  checkinTimestamp   DateTime? @map("checkin_timestamp") @db.Timestamp(6)
  checkoutTimestamp  DateTime? @map("checkout_timestamp") @db.Timestamp(6)
  name               String?   @db.VarChar(255)
  address            String?   @db.VarChar(255)
  confirmationNumber String?   @map("confirmation_number") @db.VarChar(255)
  timezoneName       String?   @map("timezone_name") @db.VarChar(64)
  latitude           Decimal?  @db.Decimal(6, 4)
  longitude          Decimal?  @db.Decimal(7, 4)
  userId             String    @map("user_id") @db.Uuid
  trip               trip      @relation(fields: [tripId], references: [id], onDelete: Cascade, map: "fk_stay_trip")
}

model airport {
  code             String   @id @db.VarChar(3)
  name             String   @db.VarChar(255)
  latitude         Decimal? @db.Decimal(6, 4)
  longitude        Decimal? @db.Decimal(7, 4)
  arrivalAirport   flight[] @relation("airportToflight_arrival_airport_code")
  departureAirpirt flight[] @relation("airportToflight_departure_airport_code")
}

model timezone {
  utc_offset String  @id @db.VarChar(6)
  name       String? @db.VarChar(255)
}
