generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Airline {
  code   String   @id @db.VarChar(2)
  name   String   @db.VarChar(255)
  flight Flight[]

  @@map("airline")
}

model Flight {
  id                    Int       @id @default(autoincrement())
  uuid                  String    @unique(map: "flight_uuid") @db.Uuid
  tripId                Int       @map("trip_id")
  airlineCode           String?   @map("airline_code") @db.VarChar(2)
  flightNumber          Int?      @map("flight_number")
  departureAirportCode  String?   @map("departure_airport_code") @db.VarChar(3)
  departureTimestamp    DateTime? @map("departure_timestamp") @db.Timestamp(6)
  arrivalAirportCode    String?   @map("arrival_airport_code") @db.VarChar(3)
  arrivalTimestamp      DateTime? @map("arrival_timestamp") @db.Timestamp(6)
  departureTimezoneName String?   @default("Etc/UTC") @map("departure_timezone_name") @db.VarChar(64)
  arrivalTimezoneName   String?   @default("Etc/UTC") @map("arrival_timezone_name") @db.VarChar(64)
  confirmationNumber    String?   @map("confirmation_number") @db.VarChar(6)
  userId                String    @map("user_id") @db.Uuid
  airline               Airline?  @relation(fields: [airlineCode], references: [code], onDelete: NoAction, map: "fk_flight_airline")
  arrivalAirport        Airport?  @relation("airportToflight_arrival_airport_code", fields: [arrivalAirportCode], references: [code], onDelete: NoAction, map: "fk_flight_arrival_airport")
  departureAirport      Airport?  @relation("airportToflight_departure_airport_code", fields: [departureAirportCode], references: [code], onDelete: NoAction, map: "fk_flight_departure_airport")
  trip                  Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade, map: "fk_flight_trip")

  @@map("flight")
}

model Trip {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique(map: "trip_uuid") @db.Uuid
  name        String   @db.VarChar(255)
  destination String?  @db.VarChar(255)
  imageUrl    String?  @map("image_url") @db.Text
  userId      String   @map("user_id") @db.Uuid
  flight      Flight[]
  stay        Stay[]

  @@map("trip")
}

model Stay {
  id                 Int       @id @default(autoincrement())
  uuid               String    @unique(map: "stay_uuid") @db.Uuid
  tripId             Int       @map("trip_id")
  checkinTimestamp   DateTime? @map("checkin_timestamp") @db.Timestamp(6)
  checkoutTimestamp  DateTime? @map("checkout_timestamp") @db.Timestamp(6)
  name               String?   @db.VarChar(255)
  address            String?   @db.VarChar(255)
  confirmationNumber String?   @map("confirmation_number") @db.VarChar(255)
  timezoneName       String?   @map("timezone_name") @db.VarChar(64)
  latitude           Decimal?  @db.Decimal(6, 4)
  longitude          Decimal?  @db.Decimal(7, 4)
  userId             String    @map("user_id") @db.Uuid
  trip               Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade, map: "fk_stay_trip")

  @@map("stay")
}

model Airport {
  code             String   @id @db.VarChar(3)
  name             String   @db.VarChar(255)
  latitude         Decimal? @db.Decimal(6, 4)
  longitude        Decimal? @db.Decimal(7, 4)
  arrivalAirport   Flight[] @relation("airportToflight_arrival_airport_code")
  departureAirpirt Flight[] @relation("airportToflight_departure_airport_code")

  @@map("airport")
}

model Timezone {
  utc_offset String  @id @db.VarChar(6)
  name       String? @db.VarChar(255)

  @@map("timezone")
}
