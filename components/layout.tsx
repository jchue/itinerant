import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { useHashParam } from '@/lib/useHashParam';
import Head from 'next/head';
import Link from 'next/link';
import Alert from './Alert';
import User from './User';

export default function Layout({ children }) {
  const router = useRouter();
  const hashParam = useHashParam();

  const [alert, setAlert] = useState({
    message: null,
    type: null,
  });

  useEffect(() => {
    if (hashParam) {
      if (hashParam.type === 'recovery') {
        return router.push(`/recover?access_token=${hashParam.access_token}`);
      }

      if (hashParam.type === 'signup') {
        setAlert({
          message: 'Acount activated!',
          type: 'success',
        });
        return;
      }

      if (hashParam.type === 'email_change') {
        setAlert({
          message: 'Email changed successfully!',
          type: 'success',
        });
        return;
      }

      if (hashParam.message) {
        setAlert({
          message: hashParam.message,
          type: 'info',
        });
        return;
      }
    }
  }, [hashParam]);

  return (
    <>
      <Head>
        <title>Itinerant</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="bg-white shadow-sm sticky top-0 z-20">
        <div className="container flex items-center mx-auto p-4">
          <div className="flex-1">
            <Link href="/" className="font-bold text-lg">Itinerant</Link>
          </div>

          <User />
        </div>
      </header>

      <main className="container mx-auto p-8">
        {alert.message &&
          <Alert
            type={alert.type}
            transient="true"
            addClass="mb-6 overflow-hidden"
          >
            {alert.message}
          </Alert>
        }

        {children}
      </main>

      <footer>
      </footer>
    </>
  );
}
